/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 26 18:03:24 GMT 2019
 */

package br.com.marmitaria.persistence.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import br.com.marmitaria.persistence.dao.ClienteDAO;
import br.com.marmitaria.persistence.model.Cliente;
import br.com.marmitaria.persistence.service.ClienteService;
import br.com.marmitaria.persistence.service.GenericService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.springframework.data.jpa.repository.JpaRepository;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClienteService_ESTest extends ClienteService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClienteService clienteService0 = new ClienteService();
      ClienteDAO clienteDAO0 = mock(ClienteDAO.class, new ViolatedAssumptionAnswer());
      doReturn((Cliente) null).when(clienteDAO0).findByEmail(anyString());
      Injector.inject(clienteService0, (Class<?>) ClienteService.class, "dao", (Object) clienteDAO0);
      JpaRepository<Object, Cliente> jpaRepository0 = (JpaRepository<Object, Cliente>) mock(JpaRepository.class, new ViolatedAssumptionAnswer());
      Injector.inject(clienteService0, (Class<?>) GenericService.class, "dao", (Object) jpaRepository0);
      Injector.validateBean(clienteService0, (Class<?>) ClienteService.class);
      Cliente cliente0 = clienteService0.findByEmail("br.com.marmitaria.persistence.service.ClienteService");
      assertNull(cliente0);
  }
}
